Checks: >
  bugprone-*,
  portability-*,
  performance-*,
  clang-analyzer-*,

  readability-identifier-naming,
  readability-braces-around-statements,

  modernize-deprecated-headers,
  modernize-use-nullptr,
  modernize-use-override,

  cert-dcl58-cpp,
  cert-err60-cpp,
  cert-flp30-c,
  cert-mem57-cpp,
  cert-oop57-cpp,
  cert-oop58-cpp,

WarningsAsErrors: "*"

CheckOptions:

  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.NamespaceCase
    value: CamelCase

  - key: readability-identifier-naming.FunctionCase
    value: CamelCase

  - key: readability-identifier-naming.MethodCase
    value: CamelCase

  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.ConstexprVariableIgnoredRegexp
    # Ignore `constexpr` variables that use Pascal Case.
    # This is for `constexpr` lambdas.
    # 
    # "^": Anchors the pattern to the start of the string.
    # "[A-Z]": Ensures that the first character is an uppercase letter.
    # "[a-zA-Z0-9]*": Matches zero or more alphanumeric characters.
    # "$": Anchors the pattern to the end of the string.
    value: ^[A-Z][a-zA-Z0-9]*$

  - key: readability-identifier-naming.EnumConstantPrefix
    value: k
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase

  - key: readability-identifier-naming.ScopedEnumConstantPrefix
    value: k
  - key: readability-identifier-naming.ScopedEnumConstantCase
    value: CamelCase

  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE

  - key: readability-identifier-naming.StaticVariablePrefix
    value: s_
  - key: readability-identifier-naming.StaticVariableCase
    value: camelBack

  - key: readability-identifier-naming.GlobalVariablePrefix
    value: g_
  - key: readability-identifier-naming.GlobalVariableCase
    value: camelBack
  - key: readability-identifier-naming.GlobalVariableIgnoredRegexp
    # Ignore variables prefixed with "s_".
    # 
    # "^": Anchors the pattern to the start of the string.
    # "s_": Matches the exact prefix "s_".
    # "[a-z]": Ensures that the first character after the prefix is a lowercase letter.
    # "[a-zA-Z0-9]*": Matches zero or more alphanumeric characters.
    # "$": Anchors the pattern to the end of the string.
    value: ^s_[a-z][a-zA-Z0-9]*$

  - key: readability-identifier-naming.MemberPrefix
    value: m_
  - key: readability-identifier-naming.MemberCase
    value: camelBack

  - key: readability-identifier-naming.ClassMemberPrefix
    value: ms_
  - key: readability-identifier-naming.ClassMemberCase
    value: camelBack

  - key: readability-identifier-naming.ParameterCase
    value: camelBack

  - key: readability-identifier-naming.LocalVariableCase
    value: camelBack
  - key: readability-identifier-naming.LocalVariableIgnoredRegexp
    # Ignore local variables that use Pascal Case.
    # This is for local lambdas.
    # 
    # "^": Anchors the pattern to the start of the string.
    # "[A-Z]": Ensures that the first character is an uppercase letter.
    # "[a-zA-Z0-9]*": Matches zero or more alphanumeric characters.
    # "$": Anchors the pattern to the end of the string.
    value: ^[A-Z][a-zA-Z0-9]*$

  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateParameterSuffix
    value: T
  - key: readability-identifier-naming.TemplateParameterIgnoredRegexp
    value: ^T$

  - key: readability-identifier-naming.ValueTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.ValueTemplateParameterPrefix
    value: k
